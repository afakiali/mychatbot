// chatbot-frontend/src/components/ChatWidget.js

import React, { useState, useEffect, useRef } from 'react';
import './ChatWidget.css'; // ุชุฃูุฏ ูู ุงุณุชูุฑุงุฏ ููู CSS ูุฐุง

function ChatWidget() {
    const [isOpen, setIsOpen] = useState(false);
    const [message, setMessage] = useState('');
    const [conversation, setConversation] = useState([]);
    const [isLoading, setIsLoading] = useState(false);
    const [isDarkMode, setIsDarkMode] = useState(false);
    const [selectedFile, setSelectedFile] = useState(null);

    const conversationEndRef = useRef(null); // ูุฑุฌุน ููุชูุฑูุฑ ุฅูู ุฃุณูู ุงููุญุงุฏุซุฉ

    // ุงูุชูุฑูุฑ ุงูุชููุงุฆู ุฅูู ุฃุณูู ุงููุญุงุฏุซุฉ ุนูุฏ ุฅุถุงูุฉ ุฑุณุงูุฉ ุฌุฏูุฏุฉ
    useEffect(() => {
        if (conversationEndRef.current) {
            conversationEndRef.current.scrollIntoView({ behavior: "smooth" });
        }
    }, [conversation]);

    // ุชุจุฏูู ูุฆุฉ 'dark-mode' ุนูู ุนูุตุฑ <body> ููุชุญูู ูู ุงููุถุน ุงููููู
    useEffect(() => {
        document.body.classList.toggle('dark-mode', isDarkMode);
    }, [isDarkMode]);

    // ูุธููุฉ ูุชุจุฏูู ูุชุญ/ุฅุบูุงู ูุงูุฐุฉ ุงูุฏุฑุฏุดุฉ
    const toggleChat = () => {
        setIsOpen(!isOpen);
    };

    // ูุธููุฉ ูุชุจุฏูู ุงููุถุน ุงููููู/ุงูููุงุฑู
    const toggleDarkMode = () => {
        setIsDarkMode(!isDarkMode);
    };

    // ูุธููุฉ ููุชุนุงูู ูุน ุชุบููุฑ ุงูููู ุงููุฎุชุงุฑ (ูุชุญููู ุงูุตูุฑ/ุงููููุงุช)
    const handleFileChange = (event) => {
        const file = event.target.files && event.target.files.length > 0 ? event.target.files[0] : null;
        if (file) {
            setSelectedFile(file);
            console.log("ุชู ุงุฎุชูุงุฑ ุงูููู:", file.name);
            // ููุงุญุธุฉ: ูุนุงูุฌุฉ ุงููููุงุช (ูุซู ุฅุฑุณุงููุง ุฅูู ุงูุฎูููุฉ) ุชุชุทูุจ ููุทููุง ุฅุถุงูููุง
        }
    };

    // ูุธููุฉ ูุฅุฑุณุงู ุงูุฑุณุงูุฉ ุฅูู ุงูุฎุงุฏู ุงูุฎููู
    const sendMessage = async (e) => {
        e.preventDefault(); // ููุน ุฅุนุงุฏุฉ ุชุญููู ุงูุตูุญุฉ ุงูุงูุชุฑุงุถูุฉ ูููููุฐุฌ

        if (!message.trim() && !selectedFile) return; // ูุง ุชุฑุณู ุฅุฐุง ูุงูุช ุงูุฑุณุงูุฉ ูุงุฑุบุฉ ููุง ููุฌุฏ ููู

        // ุฃุถู ุฑุณุงูุฉ ุงููุณุชุฎุฏู ุฅูู ุงููุญุงุฏุซุฉ ููุนุฑุถ ุงูููุฑู
        const userMessage = { text: message.trim(), sender: 'user', file: selectedFile ? selectedFile.name : null };
        // ุณุฌู ุงููุญุงุฏุซุฉ ุงูุฌุฏูุฏ ุงูุฐู ุณููุฑุณู ุฅูู ุงูุฎูููุฉ
        const newConversation = [...conversation, userMessage];
        setConversation(newConversation); // ุชุญุฏูุซ ุญุงูุฉ ุงููุญุงุฏุซุฉ ูู ุงููุงุฌูุฉ ุงูุฃูุงููุฉ

        setIsLoading(true); // ุงุจุฏุฃ ูุคุดุฑ ุงูุชุญููู

        try {
            // ุชุญููู ุณุฌู ุงููุญุงุฏุซุฉ ุฅูู ุชูุณูู OpenAI (ุฏูุฑ ููุญุชูู)
            // ูุฐุง ุงูุฌุฒุก ูู ุงูุญู ููุดููุฉ "ุงูุฑุณุงุฆู ูุทููุจุฉ" ููุชุดุบูู ุงูุฐุงูุฑุฉ
            let currentPayloadMessages = newConversation.map(msg => ({
                role: msg.sender === 'user' ? 'user' : 'assistant', // 'user' ุฃู 'assistant'
                content: msg.text // ูุญุชูู ุงูุฑุณุงูุฉ
            }));

            // ุฅุฐุง ูุงู ููุงู ูููุ ุฃุถู ุงุณูู ุฅูู ุงูุฑุณุงูุฉ ุงูุฃุฎูุฑุฉ ูู ุงูู payload
            if (selectedFile) {
                // ูุนุฏู ุขุฎุฑ ุฑุณุงูุฉ ูู ุณุฌู ุงููุญุงุฏุซุฉ (ุงูุชู ูู ุฑุณุงูุฉ ุงููุณุชุฎุฏู ุงูุญุงููุฉ)
                currentPayloadMessages[currentPayloadMessages.length - 1].content += ` (ููู ูุฑูู: ${selectedFile.name})`;
            }

            // ุฅุฑุณุงู ุณุฌู ุงููุญุงุฏุซุฉ ุงููุงูู ุฅูู ููุทุฉ ููุงูุฉ /chat ูู ุงูุฎุงุฏู ุงูุฎููู
            const response = await fetch('http://localhost:5000/chat', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ messages: currentPayloadMessages }), // ูุฑุณู ูุตูููุฉ ุงูุฑุณุงุฆู ูุงููุฉ
            });

            if (!response.ok) {
                // ุงูุชุนุงูู ูุน ุงูุฃุฎุทุงุก ูู ุงูุฎุงุฏู (ูุซู 500 Internal Server Error)
                const errorData = await response.json();
                throw new Error(errorData.error || `ุฎุทุฃ HTTP! ุงูุญุงูุฉ: ${response.status}`);
            }

            // ุงุณุชูุงู ุฑุฏ ุงูุจูุช ูุฅุถุงูุชู ุฅูู ุงููุญุงุฏุซุฉ
            const data = await response.json();
            const botResponse = { text: data.response, sender: 'bot' };
            setConversation((prevConv) => [...prevConv, botResponse]);

        } catch (error) {
            console.error('ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุฑุณุงูุฉ:', error);
            const errorMessage = { text: `ุญุฏุซ ุฎุทุฃ: ${error.message}. ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู.`, sender: 'bot-error' };
            setConversation((prevConv) => [...prevConv, errorMessage]); // ุนุฑุถ ุฑุณุงูุฉ ุฎุทุฃ ูููุณุชุฎุฏู
        } finally {
            setIsLoading(false); // ุฅุฎูุงุก ูุคุดุฑ ุงูุชุญููู
            setMessage(''); // ูุณุญ ูุฑุจุน ุงูุฅุฏุฎุงู
            setSelectedFile(null); // ูุณุญ ุงูููู ุงููุฎุชุงุฑ
        }
    };

    // ุฏุงูุฉ ูุณุงุนุฏุฉ ูุนุฑุถ ูุญุชูู ุงูุฑุณุงูุฉุ ูุน ุชูุณูู ุงูุฃุณุทุฑ ูุงูุฃุฑูุงู
    // ูุฐู ุงูุฏุงูุฉ ูู ุงูุชู ุชุญุชูู ุนูู ุงูุญู ูุนุฏู ููุจ ุงููุชุงุจุฉ ุงูุฃุฌูุจูุฉ ุงูุฐู ูุนูู ูุฏูู
    const renderMessageContent = (text, sender) => {
        // ุชูุณูู ุงููุต ุฅูู ุฃุณุทุฑ
        const lines = text.split('\n');

        return (
            // ุชุนููู ุงุชุฌุงู ุงููุต ุจูุงุกู ุนูู ุงููุฑุณู
            <div className={sender === 'user' ? 'rtl-text user-message-content' : 'rtl-text bot-message-content'}>
                {lines.map((line, index) => {
                    // ุชูุณูู ูู ุณุทุฑ ููุจุญุซ ุนู ุงูุนูุงุตุฑ ุงููุฑููุฉ (ูุซู "1. ", "2. ")
                    // regex: (\d+\.\s+) ููุชูุท ุฑูููุง ูุชุจูุนูุง ุจููุทุฉ ููุณุงูุฉ
                    const parts = line.split(/(\d+\.\s+)/);
                    return (
                        // ูู ุณุทุฑ ูู ููุฑุฉ ุฎุงุตุฉ ุจู ูุถูุงู ุชูุธูู ุงูุฃุณุทุฑ
                        <p key={index} style={{ margin: '5px 0' }}>
                            {parts.map((part, partIndex) => {
                                // ุฅุฐุง ูุงู ุงูุฌุฒุก ูุทุงุจู ููุท ุงูุฑููุ ุฃุนุทู ูุฆุฉ ุฎุงุตุฉ (ูุชููููู)
                                if (part.match(/^\d+\.\s+/)) { // ูุฌุจ ุฃู ูุจุฏุฃ ุงูุฌุฒุก ุจุฑูู
                                    return <span key={partIndex} className="numbered-item">{part}</span>;
                                } else {
                                    // ุฅุฐุง ูู ููู ุฑูููุงุ ุญุงูู ุชุญุฏูุฏ ุงุชุฌุงูู
                                    // ูุฐุง ุงูุฌุฒุก ูุณุงุนุฏ ูู ูุนุงูุฌุฉ ุงููููุงุช ุงูุฃุฌูุจูุฉ ุฏุงุฎู ุงููุต ุงูุนุฑุจู
                                    const isLikelyEnglish = /[a-zA-Z]/.test(part) && !/[\u0600-\u06FF]/.test(part);
                                    return (
                                        <span key={partIndex} className={isLikelyEnglish ? 'ltr-inline' : ''}>
                                            {part}
                                        </span>
                                    );
                                }
                            })}
                        </p>
                    );
                })}
            </div>
        );
    };

    return (
        <>
            {/* ุฒุฑ ุงูุชุจุฏูู ุงูุนุงุฆู (ุงูุดุนุงุฑ) - ูุธูุฑ ุนูุฏูุง ุชููู ูุงูุฐุฉ ุงูุฏุฑุฏุดุฉ ูุบููุฉ */}
            {!isOpen && (
                <button className="chat-toggle-button closed" onClick={toggleChat} title="ุงูุชุญ ุงูุฏุฑุฏุดุฉ">
                    <span role="img" aria-label="chat-icon">๐ฌ</span>
                </button>
            )}

            {/* ุญุงููุฉ ูุฏุฌุช ุงูุฏุฑุฏุดุฉ ุงูุฑุฆูุณูุฉ - ุชุธูุฑ ุนูุฏูุง ุชููู ููุชูุญุฉ */}
            <div className={`chat-widget ${isOpen ? 'open' : 'closed'} ${isDarkMode ? 'dark-mode' : ''}`}>
                <div className="chat-header">
                    <span className="bot-name">
                        GPT PRO
                        {/* ุฒุฑ ุงูุญุงูุฉ ุงููุชุตู - ูุธูุฑ ุจุฌุงูุจ ุงุณู ุงูุจูุช */}
                        <div className="status-indicator online" title="ูุชุตู"></div>
                    </span>
                    <div className="header-icons">
                        {/* ุฒุฑ ุชุจุฏูู ุงููุถุน ุงููููู/ุงูููุงุฑู */}
                        <button className="icon-button" onClick={toggleDarkMode} title="ุชุจุฏูู ุงููุถุน ุงููููู">
                            {isDarkMode ? 'โ๏ธ' : '๐'}
                        </button>
                        {/* ุฒุฑ ุฅุบูุงู ูุงูุฐุฉ ุงูุฏุฑุฏุดุฉ */}
                        <button className="icon-button close-button" onClick={toggleChat} title="ุฅุบูุงู ุงูุฏุฑุฏุดุฉ">
                            &times;
                        </button>
                    </div>
                </div>

                {/* ููุทูุฉ ุนุฑุถ ุงููุญุงุฏุซุฉ */}
                <div className="chat-conversation-area">
                    {conversation.map((msg, index) => (
                        <div key={index} className={`message-bubble ${msg.sender}`}>
                            {/* ุงุณุชุฎุฏุงู ุฏุงูุฉ renderMessageContent ูุชูุณูู ุงูุฑุณุงุฆู */}
                            {renderMessageContent(msg.text, msg.sender)}
                            {msg.file && <div className="attachment-info">๐ {msg.file}</div>}
                        </div>
                    ))}
                    {isLoading && (
                        <div className="message-bubble bot loading">
                            ุฌุงุฑู ุงูุชูููุฑ...
                        </div>
                    )}
                    <div ref={conversationEndRef} /> {/* ุนูุตุฑ ูุงุฑุบ ููุชูุฑูุฑ ุงูุชููุงุฆู */}
                </div>

                {/* ููุทูุฉ ุฅุฏุฎุงู ุงูุฑุณุงุฆู ูุงูุฃุฒุฑุงุฑ */}
                <form onSubmit={sendMessage} className="chat-input-area">
                    {/* ุฒุฑ ุชุญููู ุงููููุงุช */}
                    <label htmlFor="file-upload" className="upload-button" title="ุฅุฑูุงู ููู">
                        ๐
                        <input
                            id="file-upload"
                            type="file"
                            onChange={handleFileChange}
                            style={{ display: 'none' }} // ุฅุฎูุงุก ุฒุฑ ุงูุฅุฏุฎุงู ุงูุฃุตูู ูููููุงุช
                            disabled={isLoading}
                        />
                    </label>
                    {/* ูุฑุจุน ุฅุฏุฎุงู ุงููุต */}
                    <input
                        type="text"
                        value={message}
                        onChange={(e) => setMessage(e.target.value)}
                        placeholder={selectedFile ? selectedFile.name : "ุงูุชุจ ุฑุณุงูุชู ููุง..."}
                        disabled={isLoading}
                        readOnly={!!selectedFile} // ุฌุนู ูููุฑุงุกุฉ ููุท ุฅุฐุง ุชู ุงุฎุชูุงุฑ ููู
                    />
                    {/* ุฒุฑ ุฅุฑุณุงู ุงูุฑุณุงูุฉ */}
                    <button type="submit" disabled={isLoading}>
                        ุฅุฑุณุงู
                    </button>
                </form>
                {selectedFile && (
                    <div className="file-preview">
                        <span>{selectedFile.name}</span>
                        <button onClick={() => setSelectedFile(null)} className="clear-file-button">&times;</button>
                    </div>
                )}
            </div>
        </>
    );
}

export default ChatWidget;